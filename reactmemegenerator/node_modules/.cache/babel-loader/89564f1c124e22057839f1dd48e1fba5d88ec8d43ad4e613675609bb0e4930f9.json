{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musa\\\\Desktop\\\\P(17)React Meme Generator Uygulamas\\u0131\\\\reactmemegenerator\\\\src\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Meme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemeGenerator() {\n  _s();\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [randomImg, setRandomImg] = useState(\"\");\n  const [allMemeImg, setAllMemeImg] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      console.log(memes);\n      setAllMemeImg(memes);\n    });\n  }, []);\n  function handleTopChange(e) {\n    setTopText(e);\n  }\n  function handleBottomChange(e) {\n    setBottomText(e);\n  }\n  function randomPhoto() {\n    let randomNum = Math.floor(Math.random() * 100);\n    setRandomImg(allMemeImg[randomNum]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputlar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        name: \"topText\",\n        placeholder: \"Enter top Text\",\n        value: topText,\n        onChange: e => handleTopChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        name: \"bottomText\",\n        placeholder: \"Enter bottom Text\",\n        value: bottomText,\n        onChange: e => handleBottomChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => randomPhoto(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Genereate Meme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \":)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Thanks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \":D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomImg.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(MemeGenerator, \"AeOJSbBCTEz9ztiVFIHKe4zCAcM=\");\n_c = MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","MemeGenerator","topText","setTopText","bottomText","setBottomText","randomImg","setRandomImg","allMemeImg","setAllMemeImg","fetch","then","res","json","response","memes","data","console","log","handleTopChange","e","handleBottomChange","randomPhoto","randomNum","Math","floor","random","target","value","url"],"sources":["C:/Users/Musa/Desktop/P(17)React Meme Generator UygulamasÄ±/reactmemegenerator/src/MemeGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Meme.css';\r\n\r\nexport default function MemeGenerator() {\r\n    const [topText, setTopText] = useState(\"\");\r\n    const [bottomText, setBottomText] = useState(\"\");\r\n    const [randomImg, setRandomImg] = useState(\"\");\r\n    const [allMemeImg, setAllMemeImg] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                const { memes } = response.data\r\n                console.log(memes);\r\n                setAllMemeImg(memes);\r\n            })\r\n    }, [])\r\n\r\n\r\n    function handleTopChange(e) {\r\n        setTopText(e);\r\n    }\r\n    function handleBottomChange(e) {\r\n        setBottomText(e);\r\n    }\r\n\r\n    function randomPhoto() {\r\n        let randomNum = Math.floor(Math.random() * 100);\r\n        setRandomImg(allMemeImg[randomNum]);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='meme-form'>\r\n            <div className='inputlar'>\r\n\r\n                <input type=\"text\" className='input'\r\n                    name='topText'\r\n                    placeholder='Enter top Text'\r\n                    value={topText}\r\n                    onChange={e => handleTopChange(e.target.value)}\r\n                />\r\n                <input type=\"text\" className='input'\r\n                    name='bottomText'\r\n                    placeholder='Enter bottom Text'\r\n                    value={bottomText}\r\n                    onChange={e => handleBottomChange(e.target.value)}\r\n                />\r\n\r\n                <button onClick={() => randomPhoto()}>\r\n                    <div>\r\n                        <span>\r\n                            <p>Genereate Meme</p><p>:)</p>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <span>\r\n                            <p>Thanks</p><p>:D</p>\r\n                        </span>\r\n                    </div>\r\n                </button>\r\n\r\n                <div className='image'>\r\n                    <img src={randomImg.url}\r\n                    />\r\n                    <h2 className='top'>{topText}</h2>\r\n                    <h2 className='bottom'>{bottomText}</h2>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}