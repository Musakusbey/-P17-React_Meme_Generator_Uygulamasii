{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musa\\\\Desktop\\\\P(17)React Meme Generator Uygulamas\\u0131\\\\reactmemegenerator\\\\src\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Meme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [topText, setToptext] = useState(\"\");\n  const [bottomText, setBottomtext] = useState(\"\");\n  const [randomImg, setRandomImg] = useState(\"\");\n  const [allMemeImg, setAllMemeImg] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1/comments\") //Nereden veri alacaksan oranın adresini yaz.\n    .then(res => res.json) //1. then() zinciri ile işlem tamamlandığında bize bilgi verecek onu \"json\" ile parse et. //Metin haline getirmemiz lazım. Json ile parse edersen veri metin haline gelir.\n    .then(data => console.log(data)) //2.then() zinciri ile bu datayı artık kullanabiliriz ve ekrana yazabiliriz. \n    .catch(err => console.log(err)); //Eğer işlemler yanlışsa .catch kullanarak olayı bitirmeliyiz.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: \"MemeGenerator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(MemeGenerator, \"wO9Ym7hjKTsLoc19K9VJeuUY9eI=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","MemeGenerator","topText","setToptext","bottomText","setBottomtext","randomImg","setRandomImg","allMemeImg","setAllMemeImg","fetch","then","res","json","data","console","log","catch","err"],"sources":["C:/Users/Musa/Desktop/P(17)React Meme Generator Uygulaması/reactmemegenerator/src/MemeGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Meme.css';\r\n\r\nconst MemeGenerator = () => {\r\n\r\n    const [topText, setToptext] = useState(\"\");\r\n    const [bottomText, setBottomtext] = useState(\"\");\r\n    const [randomImg, setRandomImg] = useState(\"\");\r\n    const [allMemeImg, setAllMemeImg] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts/1/comments\") //Nereden veri alacaksan oranın adresini yaz.\r\n            .then((res) => res.json) //1. then() zinciri ile işlem tamamlandığında bize bilgi verecek onu \"json\" ile parse et. //Metin haline getirmemiz lazım. Json ile parse edersen veri metin haline gelir.\r\n            .then((data) => console.log(data)) //2.then() zinciri ile bu datayı artık kullanabiliriz ve ekrana yazabiliriz. \r\n            .catch(err => console.log(err)); //Eğer işlemler yanlışsa .catch kullanarak olayı bitirmeliyiz.\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <center>\r\n                MemeGenerator\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeGenerator"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC;AAEpB,MAAMC,aAAa,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,uDAAuD,CAAC,CAAC;IAAA,CAC1DC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAA,CACxBF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;IAAA,CAClCG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,uBACI;MAAA,UAAQ;IAER;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GArBKjB,aAAa;AAAA,KAAbA,aAAa;AAuBnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}