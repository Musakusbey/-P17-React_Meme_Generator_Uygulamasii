{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Musa\\\\Desktop\\\\P(17)React Meme Generator Uygulamas\\u0131\\\\reactmemegenerator\\\\src\\\\MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Meme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [topText, setToptext] = useState(\"\");\n  const [bottomText, setBottomtext] = useState(\"\");\n  const [randomImg, setRandomImg] = useState(\"\");\n  const [allMemeImg, setAllMemeImg] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      console.log(memes);\n      setAllMemeImg(memes);\n    });\n  }, []);\n  function handleTopChange(e) {\n    setToptext(e);\n  }\n  function handleBottomChange(e) {\n    setBottomtext(e);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme- from \",\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\\u0130nputlar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          name: \"topText\",\n          placeholder: \"enter top text\",\n          value: topText,\n          onChange: e => handleTopChange(e.targer.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          name: \"bottomText\",\n          placeholder: \"bottom top text\",\n          value: topText,\n          onChange: e => handleBottomChange(e.targer.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Generate Meme \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Thanks \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\\u0130mage\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: randomImg.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"top\",\n            children: toText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"bottom\",\n            children: bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(MemeGenerator, \"wO9Ym7hjKTsLoc19K9VJeuUY9eI=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","MemeGenerator","topText","setToptext","bottomText","setBottomtext","randomImg","setRandomImg","allMemeImg","setAllMemeImg","fetch","then","res","json","response","memes","data","console","log","handleTopChange","e","handleBottomChange","targer","value","url","toText"],"sources":["C:/Users/Musa/Desktop/P(17)React Meme Generator Uygulaması/reactmemegenerator/src/MemeGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Meme.css';\r\n\r\nconst MemeGenerator = () => {\r\n\r\n    const [topText, setToptext] = useState(\"\");\r\n    const [bottomText, setBottomtext] = useState(\"\");\r\n    const [randomImg, setRandomImg] = useState(\"\");\r\n    const [allMemeImg, setAllMemeImg] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then((res) => res.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n                console.log(memes);\r\n                setAllMemeImg(memes);\r\n            })\r\n\r\n    }, []);\r\n\r\n    function handleTopChange(e) {\r\n        setToptext(e);\r\n    }\r\n\r\n    function handleBottomChange(e) {\r\n        setBottomtext(e);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='meme- from '>\r\n            <center>\r\n                <div className='İnputlar'>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='input'\r\n                        name=\"topText\"\r\n                        placeholder='enter top text'\r\n                        value={topText}\r\n                        onChange={e => handleTopChange(e.targer.value)}\r\n                    /> <br /><br />\r\n                    <input\r\n                        type=\"text\"\r\n                        className='input'\r\n                        name=\"bottomText\"\r\n                        placeholder='bottom top text'\r\n                        value={topText}\r\n                        onChange={e => handleBottomChange(e.targer.value)}\r\n                    />\r\n                    <button>\r\n                        <div>\r\n                            <span>\r\n                                <p> Generate Meme </p>\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                <p> Thanks </p>\r\n                            </span>\r\n                        </div>\r\n                    </button>\r\n                    <div className='İmage'>\r\n                        <img src={randomImg.url} />\r\n                        <h2 className='top'>{toText}</h2>\r\n                        <h2 className='bottom'>{bottomText}</h2>\r\n                    </div>\r\n                </div>\r\n            </center >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MemeGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}